====== XML Export Schema ======

In order to use the FINDOLOGIC search all relevant product data needs to be imported and indexed by FINDOLOGIC. 

A product export in XML format provides relevant product informations for the FINDOLOGIC search interface.

The latest XML schema for validation can be found on Github: [[https://github.com/FINDOLOGIC/xml-export/blob/master/src/main/resources/findologic.xsd|FINDOLOGIC XML-Schema]]

<note important>The XML file has to be UTF-8 encoded</note>

===== Overview ===== 
^ Item ^ Short Description ^ Required ^ Will be searched ^
^**''<[[#item]] id="">''**| Unique identification number  | Yes | No |
^**''<[[#ordernumber]]>''**| Article number or order number  | No | Yes |
^**''<[[#name]]>''**| Article name, as usually shown on the result page | No | Yes |
^**''<[[#summary]]>''**| Summarized article description (optional)  | No | Yes |
^**''<[[#description]]>''**| Detailed article description | No | Yes |
^**''<[[#price]]>''**| Current article price including taxes | Yes | filterable only |
^**''<[[#url]]>''**| URL to the article page, must be absolute | No | No |
^**''<[[#image]]>''**| URL to the article image, must be absolute. Type "thumbnail" is used in the FINDOLOGIC Smart Suggest. | No | No |
^**''<[[#attribute]]>''**| Article categories and attributes. Will be filters | No| Yes, also filterable |
^**''<[[#keyword]]>''**| Keywords linked to current article | No | Yes |
^**''<[[#usergroup]]>''**| Visibility of article, i.e. only visible to the exported usergroups. see [[fl:modul:direct_integration:xml_schema#calculating_the_usergroup-hash_usergroup|how to generate usergrouphashes]] | No | No |
^**''<[[#bonus]]>''**| Bonus value to rank certain articles higher than others | No | No |
^**''<[[#salesfrequency]]>''**| Amount of sold items of this article | No | No |
^**''<[[#dateAdded]]>''**| Date current article was added | No | No |
^**''<[[#sort]]>''**| Value for custom sorting of search results | No | No |
^**''<[[#property]]>''**| Additional information of article to be shown on search result listing | No | No |

===== Wrapper =====

<code xml>
<?xml version="1.0" encoding="UTF-8"?>
<findologic version="">
    <items start="" count="" total="">
        <item id="">
            [...]
        </item>
        <item id="">
            [...]
        </item>
        [...]
    </items>
</findologic>
</code>

  * ''<findologic>'' has to have the attribute ''version'' containing the version of the format.
  * ''<items>'' gives information about the start-pointer (''start''), how many products are exported per step (''count'') and how many products exists in the shop in total (''total''). For more information see [[fl:modul:direct_integration:export|Export]]
  * ''<items>'' may contain 1+ ''<item>''-tags.

===== Item =====

<code xml>
[...]
<item id="">
  [...]
</item>
[...]
</code>

  * ''<item>'' holds all the information for a single item, identified by a unique ID.
  * Every information in the ''<item>''-tag can be general (**no** ''usergroup''-attribute) or limited to a single usergroup via the ''usergroup''-attribute. The gerneral information is only shown if there is no specific information for the usergroup of the specific user. [[fl:modul:direct_integration:xml_schema#calculating_the_usergroup-hash_usergroup|Here]] you find how to generate the usergroup-hash.

===== Ordernumber =====

<code xml>
[...]
<allOrdernumbers>
  <ordernumbers>
    <ordernumber><![CDATA[]]></ordernumber>
    <ordernumber><![CDATA[]]></ordernumber>
  </ordernumbers>
  <ordernumbers usergroup="">
    <ordernumber><![CDATA[]]></ordernumber>
  </ordernumbers>
  [...]
</allOrdernumbers>
[...]
</code>

  * ''<allOrdernumbers>'' contains 1+ ''<ordernumbers>''-tags, distinguished via the usergroup-attribute.
  * ''<ordernumbers>'' contains 1+ ''<ordernumber>''-tags.
  * ''<ordernumber>'' contains an article-number like internal arcticle number, EAN, ISBN, ...

===== Name =====

<code xml>
[...]
<names>
  <name><![CDATA[]]></name>
  <name usergroup=""><![CDATA[]]></name>
  [...]
</names>
[...]
</code>

  * ''<names>'' contains 1+ ''<name>''-tags, distinguished via the usergroup-attribute.
  * ''<name>'' contains the title of the product.

===== Summary =====

<code xml>
[...]
<summaries>
  <summary><![CDATA[]]></summary>
  <summary usergroup=""><![CDATA[]]></summary>
  [...]
</summaries>
[...]
</code>

  * ''<summaries>'' contains 1+ ''<summary>''-tags, distinguished via the usergroup-attribute.
  * ''<summary>'' contains the short-summary of the product.
  * We recommend to remove all HTML tags in the summary, e. g. <div>, <p>, <table>.

===== Description =====

<code xml>
[...]
<descriptions>
  <description><![CDATA[]]></description>
  <description usergroup=""><![CDATA[]]></description>
  [...]
</descriptions>
[...]
</code>

  * ''<descriptions>'' contains 1+ ''<description>''-tags, distinguished via the usergroup-attribute.
  * ''<description>'' contains the long-description of the product.
  * We recommend to remove all HTML tags in the description, e. g. <div>, <p>, <table>.

===== Price =====

<code xml>
[...]
<prices>
  <price><![CDATA[]]></price>
  <price usergroup=""><![CDATA[]]></price>
  [...]
</prices>
[...]
</code>

  * ''<prices>'' contains 1+ ''<price>''-tags, distinguished via the usergroup-attribute.
  * ''<price>'' contains the price of the product in the format ''99.9999''.

===== URL =====

<code xml>
[...]
<urls>
  <url><![CDATA[]]></url>
  <url usergroup=""><![CDATA[]]></url>
  [...]
</urls>
[...]
</code>

  * ''<urls>'' contains 1+ ''<url>''-tags, distinguished via the usergroup-attribute.
  * ''<url>'' contains the URL of the product with leading ''http[s]''.

===== Image =====

<code xml>
[...]
<allImages>
  <images>
    <image><![CDATA[]]></image>
    <image type="thumbnail"><![CDATA[]]></image>
  </images>
  <images usergroup="">
    <image><![CDATA[]]></image>
    <image type="thumbnail"><![CDATA[]]></image>
  </images>
  [...]
</allImages>
[...]
</code>

  * ''<allImages>'' contains 1+ ''<images>''-tags, distinguished via the usergroup-attribute.
  * ''<images>'' contains 1+ ''<image>''-tags.
  * ''<image>'' contains an URL of an image. The type ''thumbnail'' is used in the Smart Suggest.
  * If there is no image for a product, the shopspecific "No Image Available" image should be exported.

===== Attribute=====

<code xml>
[...]
<allAttributes>
  <attributes>
    <attribute>
      <key><![CDATA[]]></key>
      <values>
        <value><![CDATA[]]></value>
        <value><![CDATA[]]></value>
        [...]
      </values>
    </attribute>
    [...]
  </attributes>
</allAttributes>
[...]
</code>

  * ''<allAttributes>'' contains 1 ''<attributes>''-tag.
    * The ''<attributes>''-tag must NOT have an ''usergroup''-attribute.
  * ''<attributes>'' contains 1+ ''<attribute>''-tags.
  * ''<attribute>'' contains a key/value set with 1 ''<key>''-tag identifying the attribute and 1+ ''<value>''-tags setting the values for the attribute. 
  * Attributes are used in filters, navigation, guided shopping and for search-queries.
  * We recommend the following as a standard:
    * cat: CDATA (e.g. ''Sneakers_Men'' an article in the category "Sneakers" and in the subcategory "Men")
    * cat_url: CDATA (e.g. for the category http://www.shop.de/sneakers/men.html the correct cat_url is ''/sneakers/men.html'')
    * brand: CDATA (e.g. ''Adidas'')

===== Keyword =====

<code xml>
[...]
<allKeywords>
  <keywords>
    <keyword><![CDATA[]]></keyword>
    <keyword><![CDATA[]]></keyword>
    [...]
  </keywords>
  <keywords usergroup="">
    <keyword><![CDATA[]]></keyword>
    [...]
  </keywords>
  [...]
</allKeywords>
[...]
</code>

  * ''<allKeywords>'' contains 1+ ''<keywords>''-tags, distinguished via the usergroup-attribute.
  * ''<keywords>'' contains 1+ ''<keyword>''-tags.
  * ''<keyword>'' contains a single keyword (combination) of the product.

===== Usergroup =====

<code xml>
[...]
<usergroups>
  <usergroup><![CDATA[]]></usergroup>
  <usergroup><![CDATA[]]></usergroup>
  [...]
</usergroups>
[...]
</code>

  * ''<usergroups>'' contains 1+ ''<usergroup>''-tags.
  * ''<usergroup>'' contains a usergroup to which the product is visible.
  * If the ''<usergroup>''-tag is set in the search-request only the product matching the group is returned.
  * In case of more than 128 usergroups, please contact support so default settings can be adjusted

===== Bonus =====

<code xml>
[...]
<bonuses>
  <bonus><![CDATA[]]></bonus>
  <bonus usergroup=""><![CDATA[]]></bonus>
  [...]
</bonuses>
[...]
</code>

  * ''<bonuses>'' contains 1+ ''<bonus>''-tags, distinguished via the usergroup-attribute.
  * ''<bonus>'' contains a bonus value (between -0.9 and 3) to lower or raise the ranking of a product in general.

===== Salesfrequency=====

<code xml>
[...]
<salesFrequencies>
  <salesFrequency><![CDATA[]]></salesFrequency>
  <salesFrequency usergroup=""><![CDATA[]]></salesFrequency>
  [...]
</salesFrequencies>
[...]
</code>

  * ''<salesFrequencies>'' contains 1+ ''<salesFrequency>''-tags, distinguished via the usergroup-attribute.
  * ''<salesFrequency>'' contains a non-negative integer value for the salesfrequency which can be used for sorting.

===== DateAdded =====

<code xml>
[...]
<dateAddeds>
  <dateAdded><![CDATA[]]></dateAdded>
  <dateAdded usergroup=""><![CDATA[]]></dateAdded>
  [...]
</dateAddeds>
[...]
</code>

  * ''<dateAddeds>'' contains 1+ ''<dateAdded>''-tags, distinguished via the usergroup-attribute.
  * ''<dateAdded>'' contains the date and time when this item was added to the store
  * The value can be used for sorting, to list the most recent items first
  * The XML datatype is ''xs:dateTime'', a valid value is ''2002-05-30T09:30:10''
  * If only the date, but not the time is available, the time can be set to midnight, eg. ''2002-05-30T00:00:00''

===== Sort =====

<code xml>
[...]
<sorts>
  <sort><![CDATA[]]></sort>
  <sort usergroup=""><![CDATA[]]></sort>
  [...]
</sorts>
[...]
</code>

  * ''<sorts>'' contains 1+ ''<sort>''-tags, distinguished via the usergroup-attribute.
  * ''<sort>'' contains a custom integer value which can be used for sorting.

===== Property =====

<code xml>
[...]
<allProperties>
  <properties>
    <property>
      <key><![CDATA[]]></key>
      <value><![CDATA[]]></value>
    </property>
    <property>
      <key><![CDATA[]]></key>
      <value><![CDATA[]]></value>
    </property>
    [...]
  </properties>
  <properties usergroup="">
    <property>
      <key><![CDATA[]]></key>
      <value><![CDATA[]]></value>
    </property>
    <property>
      <key><![CDATA[]]></key>
      <value><![CDATA[]]></value>
    </property>
    [...]
  </properties>
  [...]
</allProperties>
[...]
</code>

  * ''<allProperties>'' contains 1+ ''<properties>''-tags, distinguished via the usergroup-attribute.
  * ''<properties>'' contains 1+ ''<property>''-tags.
  * ''<property>'' contains a key/value set with 1 ''<key>''-tag identifying the property and 1 ''<value>''-tag setting the value for the property. 
  * ''<properties>'' contains every information irrelevant to the search itself but relevant for displaying the products in the shop. 
  * ''<properties>'' can contain a ''usergroup'' attribute
    * If ''usergroup'' is given in the request then only the properties **explicitly** exported for this ''usergroup'' will be returned
    * If a ''usergroup'' is given in the request, but no ''<properties/>'' are exported for this ''usergroup'' then the default ''<properties/>'' are returned (ie. the ''<properties/>'' without ''usergroup'')
  * Following ''<property>'' Keys are not allowed for use:
    * ''ordernumber''
    * ''image[0-9]+''
    * ''thumbnail[0-9]+''
  * We recommend the following as a standard:
    * Novelty: 0/1
    * Sale: 0/1
    * Free_shipping: 0/1
    * Logo: CDATA (e.g. 'http://www.shop.de/logos/brand_logo.jpg')
    * Availability: CDATA (e.g. '<span class="green">10</span>')
    * Delivery_time: CDATA (e.g. '<span class="yellow">5-9 days</span> if ordered today')
    * Rating_value: Numeric (e.g. '4.5'; what is the rating of the product)
    * Rating_amount: Numeric (e.g. '10'; how many people rated the product)
    * Discount: Numeric (e.g. '10' to display "-10 %" or '12.90' to display "-12,90 €")
    * Basic_rate_price: Numeric (e.g. '99.9') 
    * Basic_rate_unit: CDATA (e.g. '100g')





===== Example XML =====

<code xml>
<?xml version="1.0"?>
<findologic version="1.0">
  <items start="10" count="1" total="30">
    <item id="01120c948ad41a2284ad9f0402fbc7d">
      <allOrdernumbers>
        <ordernumbers>
          <ordernumber>277KTL</ordernumber>
          <ordernumber>4987123846879</ordernumber>
        </ordernumbers>
        <ordernumbers usergroup="LNrLF7BRVJ0toQ==">
          <ordernumber>377KTL</ordernumber>
        </ordernumbers>
      </allOrdernumbers>
      <names>
        <name>Adidas Sneaker</name>
        <name usergroup="LNrLF7BRVJ0toQ==">Adidas Men's Sneaker</name>
      </names>
      <summaries>
        <summary>A cool and fashionable sneaker</summary>
        <summary usergroup="LNrLF7BRVJ0toQ==">A cool and fashionable sneaker for men</summary>
      </summaries>
      <descriptions>
        <description>With this sneaker you will walk in style. It's available in green and blue.</description>
        <description usergroup="LNrLF7BRVJ0toQ==">With this men's sneaker you will walk in style. It's comes in various sizes and colors.</description>
      </descriptions>
      <prices>
        <price>44.8</price>
        <price usergroup="LNrLF7BRVJ0toQ==">45.9</price>
      </prices>
      <urls>
        <url>https://www.store.com/sneakers/adidas.html</url>
        <url usergroup="LNrLF7BRVJ0toQ==">https://www.store.com/sneakers/mens/adidas.html</url>
      </urls>
      <allImages>
        <images>
          <image>https://www.store.com/images/277KTL.png</image>
          <image type="thumbnail">https://www.store.com/images/thumbnails/277KTL.png</image>
        </images>
        <images usergroup="LNrLF7BRVJ0toQ==">
          <image>https://www.store.com/images/277KTL.png</image>
          <image type="thumbnail">https://www.store.com/images/thumbnails/377KTL.png</image>
        </images>
      </allImages>
      <allAttributes>
        <attributes>
          <attribute>
            <key>cat</key>
            <values>
              <value>Sneakers_Men</value>
              <value>Specials_Sale</value>
            </values>
          </attribute>
          <attribute>
            <key>cat_url</key>
            <values>
              <value>/sneakers/men</value>
              <value>/specials/sale</value>
            </values>
          </attribute>
          <attribute>
            <key>brand</key>
            <values>
              <value>Adidas</value>
            </values>
          </attribute>
          <attribute>
            <key>color</key>
            <values>
              <value>green</value>
              <value>blue</value>
            </values>
          </attribute>
        </attributes>
      </allAttributes>
      <allKeywords>
        <keywords>
          <keyword>fashion</keyword>
          <keyword>cool product</keyword>
        </keywords>
        <keywords usergroup="LNrLF7BRVJ0toQ==">
          <keyword>fashion</keyword>
          <keyword>cool product</keyword>
          <keyword>mens</keyword>
        </keywords>
      </allKeywords>
      <usergroups>
        <usergroup>LNrLF7BRVJ0toQ==</usergroup>
        <usergroup>cHBw</usergroup>
      </usergroups>
      <bonuses>
        <bonus>3</bonus>
        <bonus usergroup="LNrLF7BRVJ0toQ==">5</bonus>
      </bonuses>
      <salesFrequencies>
        <salesFrequency>5</salesFrequency>
        <salesFrequency usergroup="LNrLF7BRVJ0toQ==">5</salesFrequency>
      </salesFrequencies>
      <dateAddeds>
        <dateAdded>2002-05-30T09:30:10</dateAdded>
        <dateAdded usergroup="LNrLF7BRVJ0toQ==">2002-05-30T00:00:00</dateAdded>
      </dateAddeds>
      <sorts>
        <sort>5</sort>
        <sort usergroup="LNrLF7BRVJ0toQ==">7</sort>
      </sorts>
      <allProperties>
        <properties>
          <property>
            <key>sale</key>
            <value>1</value>
          </property>
          <property>
            <key>novelty</key>
            <value>0</value>
          </property>
          <property>
            <key>logo</key>
            <value>http://www.shop.de/brand.png</value>
          </property>
          <property>
            <key>availability</key>
            <value><![CDATA[<span style="color: green;">3 days</span>]]></value>
          </property>
          <property>
            <key>old_price</key>
            <value>99.9</value>
          </property>
          <property>
            <key>Basic_rate_price</key>
            <value>99.9</value>
          </property>
        </properties>
        <properties usergroup="LNrLF7BRVJ0toQ==">
          <property>
            <key>sale</key>
            <value>0</value>
          </property>
          <property>
            <key>novelty</key>
            <value>0</value>
          </property>
          <property>
            <key>logo</key>
            <value>http://www.shop.de/brand.png</value>
          </property>
          <property>
            <key>availability</key>
            <value><![CDATA[<span style="color: green;">3 days</span>]]></value>
          </property>
          <property>
            <key>old_price</key>
            <value>99.9</value>
          </property>
          <property>
            <key>Basic_rate_price</key>
            <value>89.9</value>
          </property>
        </properties>
      </allProperties>
    </item>
  </items>
</findologic>
</code>


===== Calculating the usergroup-hash (usergroup) =====

The usergroup-hash is composed of two components:

  * the shopkey (e.g. ''ABCD0815'')
  * The combined usergroups (z.B. 'at_ratedR')

These components are put together with ''xor'' and base64 and thus can be decoded. The encoding prevents a manipulation of the search-requests (e.g. R-Rating) and provides the possibility to show usergroup-specific prices etc. 

=== Example: ===
 
<code php>
$shopkey = 'ABCD0815';
$usergroup = 'at_ratedR';
$hash = base64_encode($shopkey ^ $usergroup); // = 'NDEmNgEN'

$usergroup_decoded = ($shopkey ^ base64_decode($hash)); // = 'at_ratedR';
</code>

===== Overview =====

  - [[:fl:modul:direct_integration:shop_backend_configuration|Shop Backend Configuration]]
  - ** Export **
    - [[:fl:modul:direct_integration:Export|Export]]
    - XML-Schema
  - [[:fl:modul:direct_integration:script_integration|Script Integration]]
  - [[:fl:modul:direct_integration:tracking_integration|Tracking-Integration]]
  - [[:fl:modul:direct_integration:checklist|Checklist]]