====== Integration of FINDOLOGIC into own and not yet supported shop systems ======

===== Important =====

Our service has not to be integrated completely new! Only the components described below must be adjusted. For each of these points, there are prefabricated templates that can be used with very minor adjustments.

===== Data export =====

The data is exported in a FINDOLOGIC- format and indexed by our search servers. Guidance and examples, please see:
[Format Description]

==== Incremental export ====

An export script which has to be called multiple times is possible as well (e.g. due to a limitation of the duration of PHP run time; at each call only a part of the inventory items will be exported). This requires a provided starting URL. By Location header (HTTP location) the next URL can be called. This redirection will be followed until no more location header will be returned. Possible outputs in the body of the script may be:

  * ''SUCCESS: Finished'': The export was done correctly((If the export has to be called only once it may return ''SUCCESS: Finished'' right away))
  * ''SUCCESS: Unfinished'': The export is not yet complete, a redirect to the next call follows
  * ''ERROR'', any output: an error was found. In this case, an error message be put out, the output will be forwarded as a warning to your eMail address.

Upon successful completion of the export the CSV-file will be downloaded from the given CSV-URL.

===Example:===

  - Start: http://www.my-shop.com/findologic_export.php?start=0&limit=1000
  - Return: <code>HTTP/1.1 200 OK
Location: http://www.my-shop.com/findologic_export.php?start=1000&limit=1000
...

SUCCESS: Unfinished</code>
  - Call: http://www.my-shop.com/findologic_export.php?start=1000&limit=1000
  - Return:<code>HTTP/1.1 200 OK
...

SUCCESS: Finished</code>
  - Export done successfully, Download of CSV-file



===== Integration of search services =====

The search query and all other relevant parameters are sent internally by your shop software to our search server, which is done completely transparent to the customer. Please see also: [function description].

===== Result format =====

What the result should look like can be controlled via a template system. You can choose from three options:

==== Prefabricated HTML ====

Our service generates an HTML fragment, which can be embedded directly into the shop in place of the previous search results. The fragment contains pre-designed components for the filter, the search results and elements for the page navigation.

Layout and design can be set freely with the  template manager at FINDOLOGIC.

==== Partial HTML ====

Equal to "prefabricated HTML", except the results here are only the IDs of the products returned.

<note tip>This option is recommended over "prefabricated HTML", as the representation of the products is consistent with the rest of the shop.</note>

For "Prefabricated HTML" and "Partial HTML" there are already pre-designed templates that can be used 1:1. Please see also: [Template Manager].
With CSS, you can customize the appearance as desired.

==== XML ====

All data will be returned as XML, see also: XML format

===== Important information for integration =====

These points must be considered when no module of FINDOLOGIC is used.

<note important>
Please note the following points in integration. Otherwise, the quality of search results and usability in comparison to the potential of FINDOLOGIC will suffer.
</note>

==== Clients ====
(Autocomplete)

==== Language ====

==== Relevance - Feedback ==== 
Possible clue: "Unfortunately, we were not able to find exact matches for you. Following suggestions may can help you. Otherwise please search again with another query or contact us directly at our service team on +49 123456789?".

==== Only parts of the search are found - Feedback ====
Possible clue: "There is no product which matches to all your search terms. At least one term matches the following products."


==== Multiple selection of filters ====
It must be ensured that the filter of a type (e.g., category, material, etc.) can be selected multiple times.

==== Linking filters ==== 
The filter links are not allowed to be used by search engine crawlers, therfore they must not be linked with "<a href". The linking of the filter must be implemented for example via Java Script, so that search engines do not go through any filter combinations. This would lead to an enormous amount of queries of search engine crawlers. Even more problematic is that the indexing of pages with search engines would include filter selections that would never be selected by a customer.

==== Variants ====
If products are available in several variants in a shop, we need a main or master product for the search, which is provided with the attributes of the several variants. The search result will then be linked to the master product.

==== Frequency display ====

==== Fallback mechanism ====
In the unlikely but possible event that the search service of FINDOLOGIC is not responding, a fallback mechanism has to be integrated.
We distinguish two phases:

=== 1. phase: Alivetest must be positive ===
Before the actual query to the search service, this fallback mechanism must execute a request to the alivetest.
 The test takes only a few milliseconds:

The Alive-test is a simple ''http'' Request
<code>
http://srvXX.findologic.com/shop.tld/alivetest.php?shopkey=ABCDEFABCDEF
</code>
where ''shop.tld'' is the service-address for the search service of FINDOLOGIC and "shopkey" is the identification of the particular shop. These parameters are the same as [f [: search_request_2_0 | search facility]].

Only if the service is available, it responds with a simple string:
<code>
alive
</code>

In case of any other answer the upcoming search request has to be processed by the regular shop search instead of the FINDOLOGIC search.

<note>
The Alivetest requests shall set a timeout (default: 1 second). After this timeout has expired the regular search function of the shop software shall be used. This ensures that the search will be switched to the regular search, if the FINDOLOGIC service should be temporarily unreachable, e.g. because of a malfunction of a backbone or a cable between the servers.
</note>

=== 2. phase: Search service response time must be fast ===
If the first phase was successful and the service is operational, the actual search will be initiated. Normally the response time of FINDOLOGIC-search services is extremely fast and lasts only fractions of a second, even for hundreds of thousands of articles. However, it is technically not entirely excluded that the response time of a query takes longer, because of any technical malfunctions.

<note>The requests to the search service shall set a timeout (default: 3 seconds). After this timeout has expired the regular search function of the shop software shall be used.</note>

==== Module Development ====
If you want to develop a module for connection to FINDOLOGIC, the following points have to be noted:
  * The specification of the service URL to the FINDOLOGIC search service has to be provided in the admin area.
  * The specification of SHOPKEY (unique number of each shop / customer) has to be provided in the admin area.
  * The export should, if possible, be triggered by FINDOLOGIC via an URL. Thus, import / export,  can be re-started at any time by FINDOLOGIC.
    * The URL can pass a password with a parameter. This password will be set by the customer in the admin area.
    * If the exports can not be initiated by FINDOLOGIC, this should be updated periodically by the shop (via cron job or similar, update at least every 5 days), even if the database has not changed. Only then our monitoring systems can ensure that the exported data is current.
  * Fallback mechanism must be ensured.
  * Our logo must and has to be displayed only if the results are generated by FINDOLOGIC.
  * The various logos have to be selectable via a selection box.

===== Autocomplete =====
The autocomplete is independent of the search service, a complete reference implementation is provided:
[[F: autocomplete_integration_jquery | AutoComplete using JQuery as an example]]

<note important>
Please be sure that you follow the instructions at this link: [[q: search_2_0 | FINDOLOGIC search service]]
</note>


