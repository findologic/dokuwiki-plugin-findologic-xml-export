<note important>Version in Planung! (Jänner 2011)</note>

====== Features 1.1 ======
Folgende Features sind durch die FINDOLOGIC Suche zumindest in Deutsch bereits gelöst und müssen bei Weiterentwicklungen ebenfalls unterstützt werden.
In den Anmerkungen sind oft die Einschränkungen der aktuellen Features erläutert und sind natürlich als verbesserungswürdig zu erachten.

===== Artikelnummernsuche =====

12345678         keine Suche nach dem Anfangsteil der Artikelnummer möglich, zB 123 oder 1234. Grund: Die Suche nach 123 könnte evt. auch 123 mm meinen und liefert somit u.U. extrem viele Ergebnisse. Über 99% der Kunden suchen nach einer ganzen Nummer, für die 99% würden daher die Ergebnisse schlechter werden und nur für die 1% mit Teilangabe besser.

ab12cd34       Suche nach ab12, cd34, ab möglich. Suche nach 1234 nicht möglich.

ab12-cd/34     Suche nach ab12cd34 möglich.

100% Match: Artikelnummer=ab12ce34 Suche=ab12ce34 => Anzeige von genau diesem Artikel. Andere Artikel mit ab, 12, ce, 34 werden nicht angezeigt.

===== Stammformreduktion =====
Suchbegriffe in einer abgeleiteten Form oder in der Stammform müssen zu den gleichen Ergebnissen führen. Es muss auch egal sein, in welcher Form ein Begriff in der Artikelbeschreibung vorkommt.
Beispiele: „handschuhe“ findet „Handschuh“, „handschuh“ findet „Handschuhe“, „bitten“ findet „gebeten“

Anmerkung: Singular & Plural ist notwendig, starke Abwandlungen wie „bitten“ und „gebeten“ nicht unbedingt, wenn kein Dictionary verwendet werden kann.

Anmerkung: Über ein Dictionary lässt sich natürlich die Bedeutung von Worten in wichtigen Fällen gut zuordnen.
Beispiel: „müssen“ findet „muss“ zuerst, dann „musen“ obwohl es die Levenshtein-Distanz anders vorsehen würde.


===== Umlaut-Umschreibung =====
Die Suchergebnisse für umschriebene Umlaute müssen identisch sein mit jenen, in denen Umlaute nicht umschrieben werden.
Beispiel: „aepfel“ findet „äpfel“ genau gleich wie die Suche nach „äpfel“, „strasse“ findet „straße“

Anmerkung: Wenn es Unterschiede in der Bedeutung gibt, dürfen diese ausschließlich im Ranking sichtbar sein.
Beispiel: „strass“ findet „Strass“ zuerst, dann „Straße“, „straß“ findet „Straße“ zuerst, dann „Strass“.


===== Geringere Levenshtein-Distanz von ähnlichen Buchstaben =====
Beispiel: „Doge“ findet „Dogge“ vor „Dose“ obwohl die Levenshtein-Distanz gleich ist.


===== Teilworterkennung mit Dictionary =====
Teile von zusammengesetzten Worten müssen auch individuell gefunden werden. Die zusammengesetzte Form ist vorzuziehen, wenn danach gesucht wird.
Beispiel: „tasche für damen“ findet „Damenhandtasche“, „kreuzkümmel“ findet zuerst „Kreuzkümmel“ dann aber auch „Kümmel“


===== Bedeutungsveränderung bei Zusammensetzung =====
Ändert ein Wort die Bedeutung in der Zusammensetzung soll es nicht mehr oder später gefunden werden.
Beispiel: „schuh“ soll „Handschuh“ nicht oder erst am Schluss finden.


===== Ähnliche Worte =====
Mittels Levenshtein-Distanz und Phonetik sollen ähnliche oder ähnlich lautende Worte auch gefunden werden - je ähnlicher, desto höher im Ranking.
Beispiel: „carbon“ findet zuerst „Carbon“ dann aber auch „Karbon“, „karbon“ findet zuerst „Karbon“ dann auch „Carbon“. „schimano“ findet „Shimano“.

Anmerkung: Gerade bei Marken oder Eigennamen ist oft nicht klar, wie die genaue Schreibweise lautet.
Beispiel: „umkalobo“ findet „Umkaloabo“, „Aspirien“ findet „Aspirin“,  …

Anmerkung: Eine Levenshtein-Distanz von mehr als 3 macht normalerweise keinen Sinn mehr, aber bei ähnlich lautenden Buchstaben soll auch mehr toleriert werden.
Beispiel: „speck“ findet „seesack“ nicht mehr, aber „schiemahno“ soll „Shimano“ problemlos finden.

Anmerkung: Zur phonetischen Suche verwenden wir DMetaphone mit der Standardcodelänge.

 
Anmerkung: Sind Tippfehler im zusammengesetzten Wort enthalten, kann die Auftrennung nur erfolgen, wenn das zusammengesetzte Wort im Artikelbestand richtig geschrieben vorkommt.
Beispiel: Bei der Suche nach „herrenOHse“ statt „herrenhose“ muss zunächst in der Worttabelle des Artikelbestandes das Wort „herrenhose“ über die Levenshtein-Distanz gefunden werden, bevor das Wort aufgetrennt werden kann. Wir haben leider keinen direkten Zugriff auf zusammengesetzte Worte des Dictionarys.
„herrenOHse“ findet also „Hose für Herren“ alleine nicht.


===== Teilworterkennung von Eigennamen =====
Dieses Feature funktioniert momentan nur sehr rudimentär. Wir verwenden simple Anhaltspunkte wie Bindestrich oder Groß-/Kleinschreibung um die Teilworte in Eigennamen zu erkennen.
Beispiel: „north face“ findet „TheNorthFace“, „north face“ findet „the-north-face“, aber “north face” findet “thenorthface” nicht.


===== Suche nach mehreren Begriffen =====
Sucht man nach mehr als einem Begriff, wird versucht Artikel mit allen Begriffen zu finden. Gibt es davon keine, werden Artikel mit möglichst großen Teilmengen angezeigt und der suchende muss darüber informiert werden können.
Beispiel: Es gibt keine Artikel die alle der Begriffe „diamantbohrer für holz“ enthalten.
Die Suche ergibt: Es gibt keine Artikel, die alle Suchbegriffe enthalten, es folgen Ergebnisse mit Teilen…


===== Ranking =====
Das Ranking muss berücksichtigen können, in welchem Textfeld ein Match vorkommt. Ein Match im Titel ist etwa wichtiger als ein Match in der Beschreibung. Berücksichtigt wird auch wie oft ein Wort in einem bestimmten Artikel vorkommt und wie oft das Wort in anderen Artikel vorkommt, um entscheiden zu können, wie gut das Wort einen bestimmten Artikel beschreibt.
Wird nach mehreren Worten gesucht, sind jene Matches zu bevorzugen, in denen die Worte einen geringeren Abstand zueinander haben.
Beispiel: „damenhandtasche“ soll zuerst „Handtasche für Damen“ finden und dann erst „Sporttasche, die gut in der Hand liegt, ... speziell für Damen“

Anmerkung:
Für die Bewertung der Entfernung der gefundenen Worte verwenden wir das Cover Density Ranking von Postgres. Es funktioniert leider nur bei zusammengesetzten Worten.
Beispiel: Die Suche nach „damenhandtasche“ funktioniert wie beschrieben, die Suche nach „tasche für damen“ leider nicht.



====== Probleme ======
Folgende Probleme treten bei unserem Such (Lookup) Ansatz auf.


===== Keine Auftrennung für Worte, die nicht im Dictionary sind =====
Kommt das eingegebene zusammengesetzte Wort im Dictionary nicht vor, oder wird von keiner iSpell Regel aufgetrennt, können Teile davon nicht gefunden werden.
Beispiel: „skateboardpark“ findet „Boardpark“ nicht.

Anmerkung: Gerade bei Eigennamen kann das Dictionary natürlich oft nicht weiterhelfen.
Beispiel: „wachs“ findet „Carnaubawachs“ (Arzneimittel) nicht


===== Falsche Auftrennung von Worten im Dictionary =====
Manche Worte kommen im Dictionary zwar vor, werden aber falsch aufgetrennt. Auch die neuesten Updates der iSpell Dictionarys konnten dabei keine Abhilfe schaffen.
Beispiel: „schuldzuweisung“ wird in „schul-dzuwei-sung“ aufgetrennt (exemplarisch)


===== Falschgeschriebene Worte können nicht immer aufgetrennt werden =====
Wenn die Levenshtein-Distanz mehr als 2 beträgt und das zusammengesetzte Wort nicht im zu durchsuchenden Artikelbestand vorkommt, kann ein falsch geschriebenes Suchwort nicht aufgetrennt werden.
Beispiel: „damnhantashe“ findet nicht „Damenhandtasche“ da „damnhantashe“ vom Dictionary nicht aufgetrennt werden kann.


===== Buchstabenvertauscher zählen mit Distanz 2 =====
Die Reihenfolge zweier aufeinanderfolgender Buchstaben ist häufig vertauscht. Mit der verwendeten Implementierung der Levenshtein-Distanz weist das Suchwort eine Distanz von 2 richtig geschriebenen Wort auf. Toleriert man allgemein eine Levenshtein-Distanz von 2 kommen jedoch häufig wesentlich sinnfremdere Treffer zuerst.
Beispiel: „handtashce“ findet „handtasche“ aber genau so „handtasse“. „handtasche“ kann im Ranking nicht bevorzugt werden.


===== Unpassende Auftrennung von Worten =====
Manche Worte haben zusammengesetzt eine ganz andere Bedeutung. Werden sie vom Dictionary trotzdem aufgetrennt, Suchen manchmal wenig Sinn.
Beispiel: (exemplarisch) „Handschuh“ wird im Artikelbestand in „Hand“ und „Schuh“ aufgetrennt. Die Suche nach „schuhe“ findet dann auch „Handschuhe“.


===== iSpell trennt oft in sinnlose Teile auf =====
Beispiel: „Reifenheber“ wird in „heber“, „reif“, „reife“, „reifen“ und „reifenheber“ aufgetrennt, wobei „reif“ und „reife“ wenig Sinn ergeben.


===== Gemischt sprachige Texte schwer zu durchsuchen =====
Gerade bei Artikel-Titel oder Eigennamen versagt die Herangehensweise mit einem deutschen Dictionary oft.
Beispiel: „Konsolenspiel God of War“ im Artikelbestand. Die Suche nach „god of war“ verwirft „war“ da es sich um ein deutsches Stopword handelt und findet daher auch viele andere Titel, die nur „god“ enthalten.

Anmerkung: Eigennamen können auch häufig deutsche Stopwords enthalten. Die Verwendung von Stopwords ist daher nicht immer günstig.
Beispiel: Der Modelleisenbahnhersteller „Solch“

Anmerkung: Zusammengesetzte Eigennamen sind daher auch nicht findbar.
Beispiel: „nomonmono“ findet nicht „nomon mono“ und umgekehrt. (Tatsächliches Beispiel!)


===== Fehlertolerantes Autocomplete noch zu zeitintensiv =====
Die Autovervollständigung von Suchbegriffen – a la Google – funktioniert noch nicht fehlertolerant mit der gleichen Logik, wie die eigentliche Artikelsuche, da diese Methoden zu zeitintensiv für eine Autocomplete Anfrage sind. Autocomplete Anfragen müssen in etwa 100ms beantwortet sein.
Beispiel: Die Eingabe von den Buchstaben „asp“ schlägt bereits „aspirin“ und Ähnliches vor.
Bei der Eingabe von „aps“ kann „aspirin“ jedoch nicht vorgeschlagen werden.
